# requirements.txt - Production-ready dependencies for MindFullHorizon
# Updated for Python 3.13+ compatibility and cloud deployment

# Core Flask Dependencies
Flask==3.0.3
Flask-WTF==1.2.1
Flask-SQLAlchemy==3.1.1
Flask-Migrate==4.0.7
Flask-Session==0.5.0
Flask-Compress==1.15
Flask-SocketIO==5.3.6
Flask-CORS==4.0.0
Flask-Limiter==3.5.0

# Database and Data Processing
SQLAlchemy==2.0.35
Werkzeug==3.0.3
psycopg2-binary==2.9.9          # PostgreSQL adapter for production
alembic==1.13.1                 # Database migration tool

# Configuration and Environment
python-dotenv==1.0.1
Flask-Caching==2.3.0

# AI and External APIs
google-generativeai==0.4.1
ollama==0.1.8
requests==2.32.3
httpx==0.27.0                   # Async HTTP client

# Security and Authentication
Flask-Security-Too==5.3.3
Flask-Bcrypt==1.0.1
PyJWT==2.8.0

# Production Server - Python 3.13 compatible versions
gunicorn==22.0.0
gevent==23.9.1                  # Downgraded for Python 3.13 compatibility
eventlet==0.36.1               # Alternative for WebSocket

# Monitoring and Logging
sentry-sdk[flask]==1.45.0       # Error tracking for production

# Development and Testing (Optional)
# pytest==8.0.0
# pytest-flask==1.3.0
# pytest-cov==5.0.0
# black==24.4.2
# flake8==7.0.0

# Cloud Platform Dependencies
boto3==1.34.128                 # AWS SDK
azure-storage-blob==12.20.0     # Azure blob storage
google-cloud-storage==2.16.0    # Google Cloud storage

# Utility Libraries
python-dateutil==2.9.0
pytz==2024.1                    # Timezone support
Pillow==10.3.0                  # Image processing
reportlab==4.2.0               # PDF generation for reports

# Note: Standard library modules (json, logging, os, datetime, functools)
# are included with Python and do not need to be listed here.

# Production Recommendations:
# - Use PostgreSQL for production database (psycopg2-binary included)
# - Configure Redis for session storage and caching
# - Set up proper environment variables for all API keys
# - Use gunicorn with gevent workers for production deployment
# - Enable Flask-Compress for bandwidth optimization
# - Configure rate limiting with Flask-Limiter